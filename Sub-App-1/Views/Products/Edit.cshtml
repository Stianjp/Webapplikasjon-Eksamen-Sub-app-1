@model Sub_App_1.Models.Product

<h2>Edit Product</h2>
<div class="wrapper-box">
    <form asp-action="Edit" method="post">
        @Html.AntiForgeryToken()
        <input type="hidden" asp-for="Id" />

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            <label asp-for="Name"></label>
            <input asp-for="Name" class="form-control" />
            <span asp-validation-for="Name" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="Description"></label>
            <input asp-for="Description" class="form-control" />
            <span asp-validation-for="Description" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label>Category (Select up to 3)</label>
            <select asp-for="CategoryList" class="form-control" multiple="multiple" required>
                @foreach (var category in (ViewBag.CategoryOptions as List<string> ?? new List<string>()))
                {
                    bool isSelected = Model.CategoryList != null && Model.CategoryList.Contains(category);
                    
                    @if (isSelected)
                    {
                        <option value="@category" selected>@category</option>
                    }
                    else
                    {
                        <option value="@category">@category</option>
                    }
                }
            </select>
            <span asp-validation-for="CategoryList" class="text-danger"></span>
        </div>

        <!-- Nutritional Information Fields -->
        <div class="form-group">
            <label asp-for="Calories"></label>
            <input asp-for="Calories" type="number" step="any" class="form-control" />
            <span asp-validation-for="Calories" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="Protein"></label>
            <input asp-for="Protein" type="number" step="any" class="form-control" />
            <span asp-validation-for="Protein" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="Fat"></label>
            <input asp-for="Fat" type="number" step="any" class="form-control" />
            <span asp-validation-for="Fat" class="text-danger"></span>
        </div>

        <div class="form-group">
            <label asp-for="Carbohydrates"></label>
            <input asp-for="Carbohydrates" type="number" step="any" class="form-control" />
            <span asp-validation-for="Carbohydrates" class="text-danger"></span>
        </div>

        <!-- Allergens -->
        <div class="form-group">
            <label>Allergens (Select up to 10)</label>
            @foreach (var allergen in (ViewBag.AllergenOptions as List<string> ?? new List<string>()))
            {
                
                bool isChecked = Model.Allergens != null && Model.Allergens.Split(',').Contains(allergen);
                
                <div class="form-check">
                    <input type="checkbox" class="form-check-input" name="SelectedAllergens" value="@allergen" @(isChecked ? "checked" : "") />
                    <label class="form-check-label">@allergen</label>
                </div>
            }
            <span asp-validation-for="Allergens" class="text-danger"></span>
        </div>

        <hr>
        <button type="submit" class="btn btn-primary">Save changes</button>
        <a href="@Url.Action("Productsindex", "Products")" class="btn btn-secondary mt-3">Back to Products List</a>
    </form>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
